name: Upload to release and publish

on:
  release:
    types: [ published ]

jobs:

  release:
    strategy:
      matrix:
        node_version: [ 12 ]
        os: [ ubuntu-latest ]

    if: github.repository == 'PasteUs/PasteMeFrontend'
    name: Build with node ${{ matrix.node_version }} on ${{ matrix.os }} and upload
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v1
      - name: use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node_version: ${{ matrix.node_version }}

      - name: build and update cdn
        run: |
          GH_TOKEN=${{ secrets.PRIVATE_TOKEN }} bash .github/shell/build_and_update_cdn.sh

      - name: Release Version
        id: release_version
        run: |
          echo ::set-output name=tag::$(echo "${GITHUB_REF}" | sed -e "s/refs\/tags\///g")

      - name: gzip
        run: |
          tar -czvf pasteme-${{ steps.release_version.outputs.tag }}-frontend.tar.gz pasteme

      - name: Upload to release
        uses: JasonEtco/upload-to-release@master
        with:
          args: pasteme-${{ steps.release_version.outputs.tag }}-frontend.tar.gz application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Aliyun Docker Registry
        uses: docker/login-action@v1
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALIYUN_DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_DOCKER_REGISTRY_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7
            linux/arm/v6
            linux/386
          push: true
          tags: |
            pasteme/frontend:latest
            pasteme/frontend:${{ steps.release_version.outputs.tag }}
            registry.cn-hangzhou.aliyuncs.com/pasteus/pasteme-frontend:latest
            registry.cn-hangzhou.aliyuncs.com/pasteus/pasteme-frontend:${{ steps.release_version.outputs.tag }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Trigger Webhook
        run: |
          curl -X POST "${{ secrets.RELEASE_WEBHOOK }}frontend"
